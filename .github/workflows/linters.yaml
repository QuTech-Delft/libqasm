name: Linters

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  cpp-linters:
    name: "C++ linters"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build_type:
          - Release
        compiler:
          - clang
          - gcc
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build C++ tests (gcc-clang/Linux/x64)
        uses: ./.github/actions/cpp-tests
        with:
          build_type: ${{ matrix.build_type }}
          conan_profile_host: conan/profiles/tests-${{ matrix.build_type }}-${{ matrix.compiler }}-linux-x64
          shell: bash
      - name: Run C++ linters
        uses: cpp-linter/cpp-linter-action@v2
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          database: '${{ github.workspace }}/build/Release'
          extensions: 'cpp,hpp'
          ignore: 'emscripten/emscripten_wrapper.hpp'
          style: 'file'  # use .clang-format config file
          tidy-checks: ''  # use .clang-tidy config file
          version: 18
      - name: Fail fast
        if: steps.linter.outputs.checks-failed > 0
        run: |
          echo "::notice::Try executing 'python3 ./scripts/run_cpp_linters.py .' to fix linter issues."
          exit 1
